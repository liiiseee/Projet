package com.intiformation.gestion.servlet;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.intiformation.gestion.dao.ClientDAOImpl;
import com.intiformation.gestion.dao.ConseillerDAOImpl;
import com.intiformation.gestion.dao.IClientDAO;
import com.intiformation.gestion.dao.IConseillerDAO;
import com.intiformation.gestion.model.Client;

@WebServlet(name = "GestionClientServlet", urlPatterns = {"/gestion-client-servlet"} )
public class GestionClientServlet extends HttpServlet{
	
	// dao du client
		private IClientDAO clientDAO = new ClientDAOImpl();
		private IConseillerDAO conseillerDAO = new ConseillerDAOImpl();

/*=======================================méthodes ==============================================*/
		@Override
		protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
			String userAction = request.getParameter("action");
			switch (userAction) {
		case "modifier":

			// récup l'id du client à modifier à partir de la requete
			int idClient = Integer.parseInt(request.getParameter("id-client"));

			// récup du client par son id
			Client client = clientDAO.getByID(idClient);
			
			System.out.println("client get by id servlet ----------- : " + client);

			// redirection vers la page 'modifier-client.jsp' pour afficher
			// le client à modifier dans un formulaire

			request.setAttribute("client-modif", client);

			request.getRequestDispatcher("/modifier-client.jsp").forward(request, response);

			break;
			
		case "supp":
			// récup l'id du client à supprimer à partir de la requete
						int idClientSupp = Integer.parseInt(request.getParameter("id-client"));
						
						// appel de la dao pour la suppression du client 
						conseillerDAO.deleteClient(idClientSupp);
						
						// redirection vers la page 'accueil.jsp'
						// récup de la nouvelle liste des clients + ajout de la liste dans la requete 
						request.setAttribute("liste_clients", conseillerDAO.getAllClients());
						
						request.getRequestDispatcher("/liste-clients.jsp").forward(request, response);
						
						break;
			
	
			
		default:
			break;
		}
		
		}// end doGet

		@Override
		protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
			
			String userAction = request.getParameter("action");
			
			switch (userAction) {
			case "gererClient":
				
				
				request.getRequestDispatcher("/menu-client.jsp").forward(request, response);
				
				break;
				
			case "liste" :
				
				List<Client> listeClientsBdd = clientDAO.getAllClients();
				
				/* 3.1.2.2 sauvegarde de la liste des client dans la requet ---*/
				request.setAttribute("liste_clients", listeClientsBdd);

				request.getRequestDispatcher("/liste-clients.jsp").forward(request, response);
				
				break;//end afficher
				
			case "modif":
				List<Client> listeClientsBd = conseillerDAO.getAllClients();
				
				/* 3.1.2.2 sauvegarde de la liste des client dans la requet ---*/
				request.setAttribute("liste_clients", listeClientsBd);
				request.getRequestDispatcher("/menu-modifier-client.jsp").forward(request, response);
				

				break;
			
			
		case "modification":
			// récup des paramètres de la requete (saisie du formulaire)
						int idClient = Integer.parseInt(request.getParameter("pIdClient"));
						String nom = request.getParameter("pNom");
						String prenom = request.getParameter("pPrenom");
						String adresse = request.getParameter("pAdresse");
						String ville = request.getParameter("pVille");
						String codePostal = request.getParameter("pCodePostal");
						String telephone = request.getParameter("pTelephone");

						// chargmenet des données dans un objet Client
						Client clientUp = new Client(idClient, nom, prenom, adresse, ville, codePostal, telephone);

						// appel de la dao pour modifier le client dans la bdd
						conseillerDAO.modifierClient(clientUp);

						// redirection vers la page 'accueil.jsp' + sauvegarde de la nouvelle liste de
						// client dans la requete

						request.setAttribute("liste_clients", clientDAO.getAllClients());

						request.getRequestDispatcher("/menu-modifier-client.jsp").forward(request, response);
			
			break;
			
		case "ajout":
			request.getRequestDispatcher("/ajout-client.jsp").forward(request, response);
			
			break;
			
			
		case "ajouter":
			nom = request.getParameter("pNom");
			prenom = request.getParameter("pPrenom");
			adresse = request.getParameter("pAdresse");
			ville = request.getParameter("pVille");
			codePostal = request.getParameter("pCodePostal");
			telephone = request.getParameter("pTelephone");

			// chargmenet des données dans un objet Client
			Client client = new Client(nom, prenom, adresse, codePostal, ville, telephone); 

			// appel de la dao pour ajouter le client dans la bdd
			conseillerDAO.addClient(client);

			// redirection vers la page 'accueil.jsp' + sauvegarde de la nouvelle liste de
			// client dans la requete
			List<Client> listeClients = conseillerDAO.getAllClients();

			request.setAttribute("liste_clients", listeClients);

			request.getRequestDispatcher("/liste-clients.jsp").forward(request, response);
			
			break;
			
		case "supprimer" :
			request.getRequestDispatcher("/supprimer-client.jsp").forward(request, response);
			
			break;
			
		default:
			break;
		}// end switch
			
			
		}// end doPost()
		
		

}
