package com.intiformation.gestionclients.servlet;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.intiformation.gestionclients.dao.ClientDaoImpl;
import com.intiformation.gestionclients.dao.CompteDAOImpl;
import com.intiformation.gestionclients.dao.ConseillerDaoImpl;
import com.intiformation.gestionclients.dao.IClientDAO;
import com.intiformation.gestionclients.dao.ICompteDAO;
import com.intiformation.gestionclients.dao.IConseillerDAO;
import com.intiformation.gestionclients.model.Client;
import com.intiformation.gestionclients.model.Compte;
import com.intiformation.gestionclients.model.Conseiller;

/**
 * Servlet pour le passage d'une page à l'autre
 * @author IN-MP-018
 *
 */
@WebServlet(name="GestionPagesServlet", urlPatterns= {"/gestion-pages-servlet"})
public class GestionPagesServlet extends HttpServlet{

	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//0. Init des objets dao et listes
		IClientDAO clientDAO =new ClientDaoImpl();
		ICompteDAO compteDAO = new CompteDAOImpl();
		IConseillerDAO conseillerDAO = new ConseillerDaoImpl();
		List<Client> listeClients=null;
		
		//1. récup de la valeur du parametre 'action' 
		String userAction =request.getParameter("action");
		
		//2. test de la valeur 
		
		switch(userAction) {
		
/*====PAGE GESTION CLIENT =============================*/
		
		case "gestionClients":
			//Redirection vers la page 'gestion-clients.jsp' + sauvegarde de la nouvelle liste de client dans la requete
			
			listeClients = clientDAO.getAllClients();
			request.setAttribute("liste_clients", listeClients);
			request.getRequestDispatcher("/gestion-clients.jsp").forward(request, response);
			
			break;
			
/*====PAGE CHERCHER CLIENT =============================*/
			
		case "chercherClient":
			//Redirection vers la page 'chercher-client.jsp'

			request.getRequestDispatcher("/chercher-client.jsp").forward(request, response);
			
			break;
			
/*====PAGE AJOUTER CLIENT =============================*/
			
		case "ajoutClient":
			
			//Recup et sauvegarde de la liste des identifiants des clients
			List<Integer> listIdConseillers = conseillerDAO.getAllIDConseillers();

			request.setAttribute("liste-id-conseillers", listIdConseillers);
			
			
			//Redirection vers la page 'ajout-client.jsp'

			request.getRequestDispatcher("/ajout-client.jsp").forward(request, response);
			
			break;
			
			
			
/*====PAGE GESTION COMPTE =============================*/
			
		case "gestionComptes":
			//Redirection vers la page 'gestion-compte.jsp' 
			//Récup de la liste des comptes
			compteDAO = new CompteDAOImpl();
			List<Compte> listeComptesBdd = compteDAO.getAllComptes();
			request.setAttribute("liste_comptes", listeComptesBdd);
			
			request.getRequestDispatcher("/gestion-comptes.jsp").forward(request, response);
			
			break;
			
/*====PAGE CHERCHER COMPTE =============================*/
			
		case "chercherCompte":
			//Redirection vers la page 'chercher-compte.jsp' 

			request.getRequestDispatcher("/chercher-compte.jsp").forward(request, response);
			
			break;
			
/*====PAGE AJOUTER COMPTE =============================*/
			
		case "ajouterCompte":
			//Recup et sauvegarde de la liste des identifiants des clients
			List<Integer> listIdClients = clientDAO.getAllIDClients();

			request.setAttribute("liste-id-clients", listIdClients);
			
			//Redirection vers la page 'ajouter-compte.jsp' 
			request.getRequestDispatcher("/ajouter-compte.jsp").forward(request, response);
			
			break;
			
/*====PAGE VIREMENT COMPTE =============================*/
			
		case "virementComptes":
			//Redirection vers la page 'ajouter-compte.jsp' 

			request.getRequestDispatcher("/virement-comptes.jsp").forward(request, response);
			
			break;
			
			
/*====PAGE GESTION CONSEILLER =============================*/
			
		case "gestionConseillers":
			
			List<Conseiller> listeConseillers = conseillerDAO.getAllConseillers();
			request.setAttribute("liste_conseillers", listeConseillers);
			
			//Redirection vers la page 'gestion-conseillers.jsp' 
			
			request.getRequestDispatcher("/gestion-conseillers.jsp").forward(request, response);
			
			break;
			
/*====PAGE AJOUTER CONSEILLER =============================*/
			
		case "ajoutConseiller":
			//Redirection vers la page 'ajouter-conseiller.jsp' 
			
			request.getRequestDispatcher("/ajouter-conseiller.jsp").forward(request, response);
			
			break;	

/*====PAGE CHERCHER CONSEILLER =============================*/
			
		case "chercherConseiller":
			//Redirection vers la page 'chercher-conseiller.jsp' 
			
			request.getRequestDispatcher("/chercher-conseiller.jsp").forward(request, response);
			
			break;	

			
/*====PAGE DASHBOARD =============================*/
			
		case "dashboard":
			//Recup de la session associé à la requete + false=ne crée pas de nouvelle session
			HttpSession session = request.getSession(false);
			
			// Recup du conseiller connecté
			Conseiller conseillerlogged=(Conseiller)session.getAttribute("conseillerLogged");
			
			//Récup de la liste des clients appartenant au conseiller 
			
			List<Client> listeClientsConseiller = conseillerDAO.getClientsduConseiller(conseillerlogged.getIdConseiller());
			
			
			//Récup de la liste des comptes appartenant à ses clients
			
			List<Compte> listeComptesConseiller=new ArrayList<>();
			List<Compte> listeCompteClient=new ArrayList<>();
			
			//Concaténation des listes de comptes de chaque client
			for(Client client : listeClientsConseiller) {
				listeCompteClient= compteDAO.getCompteByIDClient(client.getIdClient());
				listeComptesConseiller.addAll(listeCompteClient);
			}
			
			//Sauvegarde de la liste des clients dans un attribut de la requete
			request.setAttribute("liste_clients", listeClientsConseiller);
			request.setAttribute("liste_comptes", listeComptesConseiller);

			// délégation vers la page d'accueil
			request.getRequestDispatcher("/dashboard.jsp").forward(request,  response);
			
			break;			
			
		default:
			break;
	
		}//end switch
		
	}//end doGet

}//end class
